---
Resources:
  LambdaBasicExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: LambdaBasicExecutionRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  LambdaToSQSExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: LambdaToSQSExecutionRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: LambdaSendMessageSQS
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - 'sqs:SendMessage'
                Resource: !GetAtt MortgageQuotes.Arn
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  CreditBureau:
    Type: AWS::Lambda::Function
    Properties:
      Role: !GetAtt LambdaBasicExecutionRole.Arn
      PackageType: Image
      Code:
        ImageUri: !Sub ${AWS::AccountId}.dkr.ecr.sa-east-1.amazonaws.com/creditbureau:latest
      FunctionName: loan-broker-CreditBureau

  BankRecipientPawnshop:
    Type: AWS::Lambda::Function
    Properties:
      Role: !GetAtt LambdaToSQSExecutionRole.Arn
      PackageType: Image
      Code:
        ImageUri: !Sub ${AWS::AccountId}.dkr.ecr.sa-east-1.amazonaws.com/bankrecipient:latest
      FunctionName: loan-broker-BankRecipientPawnshop
      Environment:
        Variables:
          BANK_ID: PawnShop
          BASE_RATE: 5
          MAX_LOAN_AMOUNT: 500000
          MIN_CREDIT_SCORE: 400

  BankRecipientUniversal:
    Type: AWS::Lambda::Function
    Properties:
      Role: !GetAtt LambdaToSQSExecutionRole.Arn
      PackageType: Image
      Code:
        ImageUri: !Sub ${AWS::AccountId}.dkr.ecr.sa-east-1.amazonaws.com/bankrecipient:latest
      FunctionName: loan-broker-BankRecipientUniversal
      Environment:
        Variables:
          BANK_ID: Universal
          BASE_RATE: 4
          MAX_LOAN_AMOUNT: 700000
          MIN_CREDIT_SCORE: 500

  BankRecipientPremium:
    Type: AWS::Lambda::Function
    Properties:
      Role: !GetAtt LambdaToSQSExecutionRole.Arn
      PackageType: Image
      Code:
        ImageUri: !Sub ${AWS::AccountId}.dkr.ecr.sa-east-1.amazonaws.com/bankrecipient:latest
      FunctionName: loan-broker-BankRecipientPremium
      Environment:
        Variables:
          BANK_ID: Premium
          BASE_RATE: 3
          MAX_LOAN_AMOUNT: 900000
          MIN_CREDIT_SCORE: 600

  MortgageQuoteRequest:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: loan-broker-MortgageQuoteRequest

  BankRecipientPawnshopSNSSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !GetAtt BankRecipientPawnshop.Arn
      Protocol: lambda
      TopicArn: !Ref MortgageQuoteRequest

  BankRecipientUniversalSNSSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !GetAtt BankRecipientUniversal.Arn
      Protocol: lambda
      TopicArn: !Ref MortgageQuoteRequest

  BankRecipientPremiumSNSSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !GetAtt BankRecipientPremium.Arn
      Protocol: lambda
      TopicArn: !Ref MortgageQuoteRequest

  BankRecipientPawnshopPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref BankRecipientPawnshop
      Action: lambda:InvokeFunction
      Principal: sns.amazonaws.com
      SourceArn: !Ref MortgageQuoteRequest

  BankRecipientUniversalPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref BankRecipientUniversal
      Action: lambda:InvokeFunction
      Principal: sns.amazonaws.com
      SourceArn: !Ref MortgageQuoteRequest

  BankRecipientPremiumPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref BankRecipientPremium
      Action: lambda:InvokeFunction
      Principal: sns.amazonaws.com
      SourceArn: !Ref MortgageQuoteRequest

  MortgageQuotes:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: loan-broker-MortgageQuotes
      MessageRetentionPeriod: 300

  MortgageQuotesQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref MortgageQuotes
      PolicyDocument:
        Statement:
          - Action:
              - "SQS:SendMessage"
              - "SQS:ReceiveMessage"
              - "SQS:DeleteMessage"
              - "SQS:ChangeMessageVisibility"
            Effect: "Allow"
            Resource: !Ref MortgageQuotes
            Principal:
              AWS:
                - !Sub ${AWS::AccountId}

  LoanBrokerEB:
    Type: AWS::Events::EventBus
    Properties:
      Name: loan-broker-eb
      Description: "Message and content filter"

  LoanBrokerEBPolicy:
    Type: AWS::Events::EventBusPolicy
    Properties:
      StatementId: "PutForAllInAccount"
      Principal: !Sub ${AWS::AccountId}
      Action: "events:PutEvents"
      EventBusName: !Ref LoanBrokerEB

  LoanBrokerEBRule:
    Type: AWS::Events::Rule
    Properties:
      EventBusName: !Ref LoanBrokerEB
      Name: loan-broker-eb-rule
      EventPattern:
        detail:
          requestContext:
            functionArn:
              - prefix: !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:loan-broker-Bank
          responsePayload:
            bankId:
              - exists: true
      Targets:
        - Arn: !GetAtt MortgageQuotes.Arn
          Id: loan-broker-MortgageQuotes-SQS-target
          InputPath: $.detail.responsePayload

  BankRecipientPawnshopDestination:
      Type: AWS::Lambda::EventInvokeConfig
      Properties:
        DestinationConfig:
          OnSuccess:
            Destination: !GetAtt LoanBrokerEB.Arn
        FunctionName: !Ref BankRecipientPawnshop
        Qualifier: $LATEST

