---
Resources:
  LambdaBasicExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: LambdaBasicExecutionRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  LoanBrokerLambdaBanksExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${AWS::StackName}-lambda-banks-execution-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: !Sub ${AWS::StackName}-lambda-banks-execution-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - 'events:PutEvents'
                Resource: !GetAtt LoanBrokerEB.Arn
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  CreditBureau:
    Type: AWS::Lambda::Function
    Properties:
      Role: !GetAtt LambdaBasicExecutionRole.Arn
      PackageType: Image
      Code:
        ImageUri: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/creditbureau:latest
      FunctionName: !Sub ${AWS::StackName}-CreditBureau

  BankRecipientPawnshop:
    Type: AWS::Lambda::Function
    Properties:
      Role: !GetAtt LoanBrokerLambdaBanksExecutionRole.Arn
      PackageType: Image
      Code:
        ImageUri: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/bankrecipient:latest
      FunctionName: !Sub ${AWS::StackName}-BankRecipientPawnshop
      Environment:
        Variables:
          BANK_ID: PawnShop
          BASE_RATE: 5
          MAX_LOAN_AMOUNT: 500000
          MIN_CREDIT_SCORE: 400

  BankRecipientUniversal:
    Type: AWS::Lambda::Function
    Properties:
      Role: !GetAtt LoanBrokerLambdaBanksExecutionRole.Arn
      PackageType: Image
      Code:
        ImageUri: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/bankrecipient:latest
      FunctionName: !Sub ${AWS::StackName}-BankRecipientUniversal
      Environment:
        Variables:
          BANK_ID: Universal
          BASE_RATE: 4
          MAX_LOAN_AMOUNT: 700000
          MIN_CREDIT_SCORE: 500

  BankRecipientPremium:
    Type: AWS::Lambda::Function
    Properties:
      Role: !GetAtt LoanBrokerLambdaBanksExecutionRole.Arn
      PackageType: Image
      Code:
        ImageUri: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/bankrecipient:latest
      FunctionName: !Sub ${AWS::StackName}-BankRecipientPremium
      Environment:
        Variables:
          BANK_ID: Premium
          BASE_RATE: 3
          MAX_LOAN_AMOUNT: 900000
          MIN_CREDIT_SCORE: 600

  MortgageQuoteTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub ${AWS::StackName}-MortgageQuoteTopic

  BankRecipientPawnshopSNSSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !GetAtt BankRecipientPawnshop.Arn
      Protocol: lambda
      TopicArn: !Ref MortgageQuoteTopic

  BankRecipientUniversalSNSSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !GetAtt BankRecipientUniversal.Arn
      Protocol: lambda
      TopicArn: !Ref MortgageQuoteTopic

  BankRecipientPremiumSNSSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !GetAtt BankRecipientPremium.Arn
      Protocol: lambda
      TopicArn: !Ref MortgageQuoteTopic

  BankRecipientPawnshopPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref BankRecipientPawnshop
      Action: lambda:InvokeFunction
      Principal: sns.amazonaws.com
      SourceArn: !Ref MortgageQuoteTopic

  BankRecipientUniversalPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref BankRecipientUniversal
      Action: lambda:InvokeFunction
      Principal: sns.amazonaws.com
      SourceArn: !Ref MortgageQuoteTopic

  BankRecipientPremiumPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref BankRecipientPremium
      Action: lambda:InvokeFunction
      Principal: sns.amazonaws.com
      SourceArn: !Ref MortgageQuoteTopic

  MortgageQuotes:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${AWS::StackName}-MortgageQuotes
      MessageRetentionPeriod: 300

  MortgageQuotesQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref MortgageQuotes
      PolicyDocument:
        Statement:
          - Action:
              - "SQS:SendMessage"
              - "SQS:ReceiveMessage"
              - "SQS:DeleteMessage"
              - "SQS:ChangeMessageVisibility"
            Effect: "Allow"
            Resource: !GetAtt MortgageQuotes.Arn
            Principal: { Service: events.amazonaws.com }

  LoanBrokerEB:
    Type: AWS::Events::EventBus
    Properties:
      Name: !Sub ${AWS::StackName}-eb
      Description: "Message and content filter"

  LoanBrokerEBPolicy:
    Type: AWS::Events::EventBusPolicy
    Properties:
      StatementId: "PutForAllInAccount"
      Principal: !Sub ${AWS::AccountId}
      Action: "events:PutEvents"
      EventBusName: !Ref LoanBrokerEB

  LoanBrokerEBRule:
    Type: AWS::Events::Rule
    Properties:
      EventBusName: !Ref LoanBrokerEB
      Name: !Sub ${AWS::StackName}-filter
      State: ENABLED
      EventPattern:
        detail:
          requestContext:
            functionArn:
              - prefix: !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:!Sub ${AWS::StackName}-Bank
          responsePayload:
            bankId:
              - exists: true
      Targets:
        - Arn: !GetAtt MortgageQuotes.Arn
          Id: !Sub ${AWS::StackName}-MortgageQuotes-SQS-target
          InputPath: $.detail.responsePayload

  BankRecipientPawnshopDestination:
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      DestinationConfig:
        OnSuccess:
          Destination: !GetAtt LoanBrokerEB.Arn
      FunctionName: !Ref BankRecipientPawnshop
      Qualifier: $LATEST

  BankRecipientUniversalDestination:
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      DestinationConfig:
        OnSuccess:
          Destination: !GetAtt LoanBrokerEB.Arn
      FunctionName: !Ref BankRecipientUniversal
      Qualifier: $LATEST

  BankRecipientPremiumDestination:
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      DestinationConfig:
        OnSuccess:
          Destination: !GetAtt LoanBrokerEB.Arn
      FunctionName: !Ref BankRecipientPremium
      Qualifier: $LATEST

  LoanBrokerStateMachineExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${AWS::StackName}-state-machine-execution-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - states.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: !Sub ${AWS::StackName}-state-machine-execution-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "lambda:InvokeFunction"
                Resource: !GetAtt CreditBureau.Arn
              - Effect: Allow
                Action:
                  - "sns:Publish"
                Resource: !Ref MortgageQuoteTopic

  LoanBrokerStateMachine:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      StateMachineName: !Sub ${AWS::StackName}-states
      DefinitionString: !Sub |
        {
          "StartAt": "GetCreditScore",
          "States": {
            "GetCreditScore": {
              "Type": "Task",
              "Resource": "${CreditBureau.Arn}",
              "Parameters": {
                "ssn.$": "$.ssn",
                "requestId.$": "$$.Execution.Id"
              },
              "ResultSelector": {
                "score.$": "$.body.score",
                "history.$": "$.body.history"
              },
              "ResultPath": "$.credit",
              "Next": "SNSPublish"
            },
            "SNSPublish": {
              "Type": "Task",
              "Resource": "arn:aws:states:::sns:publish",
              "Parameters": {
                "Message.$": "$",
                "TopicArn": "${MortgageQuoteTopic}",
                "MessageAttributes": {
                  "requestId": {
                    "DataType": "String",
                    "StringValue.$": "$$.Execution.Id"
                    }
                  }
                },
              "End": true,
              "ResultPath": "$.SNSResponse"
            }
          }
        }
      RoleArn: !GetAtt LoanBrokerStateMachineExecutionRole.Arn
      StateMachineType: STANDARD

